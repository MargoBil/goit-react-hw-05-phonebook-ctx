{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ThemeButton/ThemeButton.module.css","components/ContactList/ContactList.module.css","context/ThemeContext.js","hoc/withTheme .js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Section/Section.js","components/Filter/Filter.js","components/ThemeButton/ThemeButton.js","components/Wrapper/Wrapper.js","components/App.js","index.js","components/ContactItem/ContactItem.module.css","components/Section/Section.module.css"],"names":["module","exports","createContext","Provider","Consumer","ThemeContext","toggleTheme","setState","prevState","theme","state","value","this","props","children","Component","withTheme","WrappedComponent","context","auth","INITIAL_STATE","name","number","handleSubmit","e","preventDefault","onAddName","handleChange","target","isThemeLight","className","s","formLight","formDark","onSubmit","labelLight","labelDark","input","type","onChange","mask","maskChar","btnFormLight","btnFormDark","contact","onDeleteContact","id","itemLight","itemDark","btnLight","btnDark","onClick","ContactList","contacts","list","map","key","title","section","nameLight","nameDark","box","lightBtn","darkBtn","isThemeLigth","document","body","style","backgroundColor","App","filter","changeFilter","getVisibleContacts","toLowerCase","includes","addName","find","alert","uuidv4","deleteContact","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","visibleFilter","length","visibleList","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.faa9a079.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__8-FBh\",\"labelLight\":\"ContactForm_labelLight__1hesy\",\"labelDark\":\"ContactForm_labelDark__3vXrG\",\"formLight\":\"ContactForm_formLight__rtCUB\",\"formDark\":\"ContactForm_formDark__2FkNU\",\"btnFormLight\":\"ContactForm_btnFormLight__3W2V-\",\"btnFormDark\":\"ContactForm_btnFormDark__2t1JH\",\"btnForm\":\"ContactForm_btnForm__iJpv5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__1nB82\",\"labelLight\":\"Filter_labelLight__3aiVQ\",\"labelDark\":\"Filter_labelDark__o0exz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lightBtn\":\"ThemeButton_lightBtn__3NzcT\",\"darkBtn\":\"ThemeButton_darkBtn__3dgNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1FN2g\"};","import React, {Component, createContext} from 'react';\r\n\r\nconst {Provider, Consumer} = createContext();\r\n\r\nclass ThemeContext extends Component {\r\n  static Consumer = Consumer;\r\n  toggleTheme = () => {\r\n    this.setState(prevState => ({\r\n      theme: prevState.theme === 'light' ? 'dark' : 'light',\r\n    }));\r\n  };\r\n  state = {\r\n    theme: 'light',\r\n    toggleTheme: this.toggleTheme,\r\n  };\r\n  render() {\r\n    return <Provider value={this.state}>{this.props.children}</Provider>;\r\n  }\r\n}\r\nexport default ThemeContext;\r\n","import React from 'react';\r\nimport ThemeContext from '../context/ThemeContext';\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function WithTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {context => <WrappedComponent {...props} auth={context} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import React, {Component} from 'react';\r\nimport InputMask from 'react-input-mask';\r\n\r\nimport withTheme from '../../hoc/withTheme ';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onAddName(this.state);\r\n    this.setState({\r\n      ...INITIAL_STATE,\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const {name, value} = e.target;\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    const {name, number} = this.state;\r\n    const {theme} = this.props.auth;\r\n    const isThemeLight = theme === 'light';\r\n    return (\r\n      <form\r\n        className={isThemeLight ? s.formLight : s.formDark}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <label className={isThemeLight ? s.labelLight : s.labelDark}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={isThemeLight ? s.labelLight : s.labelDark}>\r\n          Number\r\n          <InputMask\r\n            className={s.input}\r\n            mask=\"999-99-99\"\r\n            maskChar=\" \"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button\r\n          className={isThemeLight ? s.btnFormLight : s.btnFormDark}\r\n          type=\"submit\"\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(ContactForm);\r\n","import React from 'react';\r\n\r\nimport withTheme from '../../hoc/withTheme ';\r\n\r\nimport s from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({contact, number, onDeleteContact, id, ...props}) => {\r\n  const {theme} = props.auth;\r\n  const isThemeLight = theme === 'light';\r\n  return (\r\n    <li className={isThemeLight ? s.itemLight : s.itemDark}>\r\n      <p>\r\n        {contact}: {number}\r\n      </p>\r\n      <button\r\n        className={isThemeLight ? s.btnLight : s.btnDark}\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default withTheme(ContactItem);\r\n","import React from 'react';\r\n\r\nimport ContactItem from '../ContactItem/ContactItem';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({name, id, number}) => {\r\n        return (\r\n          <ContactItem\r\n            contact={name}\r\n            number={number}\r\n            key={id}\r\n            onDeleteContact={onDeleteContact}\r\n            id={id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\n\r\nimport withTheme from '../../hoc/withTheme ';\r\n\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({title, children, ...props}) => {\r\n  const {theme} = props.auth;\r\n  const isThemeLight = theme === 'light';\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={isThemeLight ? s.nameLight : s.nameDark}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withTheme(Section);\r\n","import React from 'react';\r\n\r\nimport withTheme from '../../hoc/withTheme ';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({value, onChange, ...props}) => {\r\n  const {theme} = props.auth;\r\n  const isThemeLight = theme === 'light';\r\n  return (\r\n    <div className={s.box}>\r\n      <label className={isThemeLight ? s.labelLight : s.labelDark}>\r\n        Find contacts by name\r\n        <input value={value} onChange={onChange} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(Filter);\r\n","import React, {Component} from 'react';\r\n\r\nimport withTheme from './../../hoc/withTheme ';\r\n\r\nimport s from './ThemeButton.module.css';\r\n\r\nclass ThemeButton extends Component {\r\n  render() {\r\n    const {toggleTheme, theme} = this.props.auth;\r\n    const isThemeLight = theme === 'light';\r\n    return (\r\n      <button\r\n        className={isThemeLight ? s.lightBtn : s.darkBtn}\r\n        type=\"button\"\r\n        onClick={toggleTheme}\r\n      >\r\n        Theme: {theme}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(ThemeButton);\r\n","import React from 'react';\r\n\r\nimport withTheme from '../../hoc/withTheme ';\r\n\r\nconst Wrapper = ({children, ...props}) => {\r\n  const {theme} = props.auth;\r\n  const isThemeLigth = theme === 'light';\r\n  isThemeLigth\r\n    ? (document.body.style.backgroundColor = '#ffffff')\r\n    : (document.body.style.backgroundColor = '#0a4658');\r\n  return <div>{children}</div>;\r\n};\r\n\r\nexport default withTheme(Wrapper);\r\n","import React, {Component} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Section from './Section/Section';\r\nimport Filter from './Filter/Filter';\r\nimport ThemeButton from './ThemeButton/ThemeButton';\r\nimport Wrapper from './Wrapper/Wrapper';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const persistedContacts = localStorage.getItem('contacts');\r\n    if (persistedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(persistedContacts),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  changeFilter = ({target}) => {\r\n    const filter = target.value;\r\n    this.setState({filter});\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const {contacts, filter} = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  addName = ({name, number}) => {\r\n    const {contacts} = this.state;\r\n    const identicContact = contacts.find(contact => {\r\n      return contact.name.toLowerCase() === name.toLowerCase();\r\n    });\r\n\r\n    if (identicContact) {\r\n      alert(`${name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState(prevState => {\r\n      return {contacts: [...prevState.contacts, contact]};\r\n    });\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(\r\n          contact => contact.id !== contactId,\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {filter} = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    const visibleFilter = visibleContacts.length > 1;\r\n    const visibleList = visibleContacts.length > 0;\r\n\r\n    return (\r\n      <Wrapper>\r\n        <ThemeButton />\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm onAddName={this.addName} />\r\n          {visibleFilter && (\r\n            <Filter value={filter} onChange={this.changeFilter} />\r\n          )}\r\n        </Section>\r\n        {visibleList && (\r\n          <Section title=\"Contacts\">\r\n            <ContactList\r\n              contacts={visibleContacts}\r\n              onDeleteContact={this.deleteContact}\r\n            />\r\n          </Section>\r\n        )}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport ThemeContext from '../src/context/ThemeContext';\n\nReactDOM.render(\n  <ThemeContext>\n    <App />\n  </ThemeContext>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemLight\":\"ContactItem_itemLight__7iMzE\",\"itemDark\":\"ContactItem_itemDark__6iCWl\",\"btnLight\":\"ContactItem_btnLight__2hIIi\",\"btnDark\":\"ContactItem_btnDark__3biBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1tL-1\",\"nameLight\":\"Section_nameLight__Lvuga\",\"nameDark\":\"Section_nameDark___VRhp\"};"],"sourceRoot":""}